group 'com.alizda.gsy_video_player'
version '1.0-SNAPSHOT'

buildscript {
    ext.kotlin_version = '1.7.10'
    ext.gsyVideoVersion  = '11.0.0'
    ext.danmakuFlameMasterSoVersion  = '0.9.25'
    repositories {
        google()
        mavenCentral()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:7.3.1'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

allprojects {
    repositories {
        maven { url 'https://jitpack.io' }
        maven { url "https://maven.aliyun.com/repository/public" }
        google()
        mavenCentral()
    }
}

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

android {
    if (project.android.hasProperty("namespace")) {
        namespace 'com.alizda.gsy_video_player'
    }

    compileSdk 35

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
    }

    defaultConfig {
        minSdkVersion 21
    }

    dependencies {
        testImplementation 'org.jetbrains.kotlin:kotlin-test'
        testImplementation 'org.mockito:mockito-core:5.0.0'

        implementation "com.github.CarGuo.GSYVideoPlayer:gsyvideoplayer-java:${gsyVideoVersion}"

        //是否需要ExoPlayer模式
        implementation "com.github.CarGuo.GSYVideoPlayer:gsyvideoplayer-exo2:${gsyVideoVersion}"

        //是否需要AliPlayer模式
        implementation "com.github.CarGuo.GSYVideoPlayer:gsyvideoplayer-aliplay:${gsyVideoVersion}"

        //根据你的需求ijk模式的so
        implementation "com.github.CarGuo.GSYVideoPlayer:gsyvideoplayer-ex_so:${gsyVideoVersion}"


    }

    testOptions {
        unitTests.all {
            useJUnitPlatform()
            testLogging {
               events "passed", "skipped", "failed", "standardOut", "standardError"
               outputs.upToDateWhen {false}
               showStandardStreams = true
            }
        }
    }
}
